#include "colors.inc"   
#include "textures.inc"     

#declare Len = 10; 
#declare Points = array[8];
#declare Num = array[6];
#declare in = array[6]{1,2,3,4,5,6};

camera{ location<20,10,20> look_at<0,0,0>}
      
light_source{ <50,100,100> White parallel point_at <0,0,0>} 

sky_sphere{ pigment{rgb <121,241,255>/255}} 

plane { y, -20 texture{DMFWood1}}

background {Grey}

#local i = 0;
#for (Contadorx,-1,1)
    #for (Contadory,-1,1)
        #for (Contadorz,-1,1)
            #if (Contadorx != 0 & Contadory != 0 & Contadorz != 0)
                #declare Points[i] = <(Contadorx*Len)/2,(Contadory*Len)/2,(Contadorz*Len)/2>; 
                #local i = i+1;
                #end
            #end    
        #end
    #end 

#declare Num[0] = array[1]{(Points[6]+Points[0])/2};
#declare Num[1] = array[2]{(3/4)*Points[7] + (1/4)*Points[2], (1/4)*Points[7] + (3/4)*Points[2]};
#declare Num[2] = array[3]{(3/4)*Points[7] + (1/4)*Points[4], (1/4)*Points[7] + (3/4)*Points[4], (Points[6]+Points[5])/2};
#declare Num[3] = array[4]{(3/4)*Points[1] + (1/4)*Points[2], (1/4)*Points[1] + (3/4)*Points[2],(3/4)*Points[3] + (1/4)*Points[0], (1/4)*Points[3] + (3/4)*Points[0]};
#declare Num[4] = array[5]{(3/4)*Points[0] + (1/4)*Points[5], (1/4)*Points[0] + (3/4)*Points[5],(3/4)*Points[4] + (1/4)*Points[1], (1/4)*Points[4] + (3/4)*Points[1],(Points[4]+Points[1])/2};
#declare Num[5] = array[6]{(3/4)*Points[5] + (1/4)*Points[3], (1/4)*Points[5] + (3/4)*Points[3],(3/4)*Points[7] + (1/4)*Points[1], (1/4)*Points[7] + (3/4)*Points[1],(1/2)*Points[5] + (3/4)*Points[3] - (1/4)*Points[7], (1/2)*Points[5] + (1/4)*Points[3] + (1/4)*Points[7]};   
    
difference{
box{ Points[0], Points[7] texture{pigment {color White}} finish{ambient 0.3 diffuse 1}}

#local j = 0;
#while (j < 6)
    #local k = 0;
    #while (k < (in[j]))
        sphere{Num[j][k] 1 pigment{color Red}}
        #local k = k+1;
        #end
    #local j = j+1;
    #end
}

